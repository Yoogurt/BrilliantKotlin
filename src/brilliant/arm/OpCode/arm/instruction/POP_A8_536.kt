/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package brilliant.arm.OpCode.arm.instruction

import brilliant.arm.OpCode.factory.OpUtil.getShiftInt
import brilliant.arm.OpCode.factory.OpUtil.parseRegisterList
import brilliant.arm.OpCode.arm.instruction.support.ParseSupport
import brilliant.arm.OpCode.factory.CondFactory

class POP_A8_536 : ParseSupport() {

    override fun parse(data: Int): String? {
        val op = getShiftInt(data, 21, 7)
        if (op == 69)
            return EncodingA1(data)

        if (op == 36)
            return EnocdingA2(data)

        return error(data)
    }

    private fun EncodingA1(data: Int): String {

        val sb = StringBuilder("POP")

        sb.append(CondFactory.parse(getCond(data)))
        sb.append(" {")
        sb.append(parseRegisterList(getShiftInt(data, 0, 16), -1))
        sb.append("}")

        return sb.toString()
    }

    private fun EnocdingA2(data: Int): String? {
        return null
    }

    override fun performExecuteCommand(data: Int) {}

    companion object {

        val INSTANCE = POP_A8_536()
    }

}