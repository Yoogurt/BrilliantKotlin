/*-------------------------------
 Auto Generated By AutoGenetate.java
     Don't remove or modify
        License GPL/GNU
-------------------------------*/
package brilliant.arm.OpCode.arm.instruction

import brilliant.arm.OpCode.factory.OpUtil.getShiftInt
import brilliant.arm.OpCode.factory.OpUtil.parseRegister

import brilliant.arm.OpCode.arm.instruction.support.ParseSupport
import brilliant.arm.OpCode.factory.CondFactory

class SMLALBB_A8_626 : ParseSupport() {

    override fun parse(data: Int): String {

        val sb = StringBuilder("SMLAL")

        val RdLo = getShiftInt(data, 16, 4)
        val RdHi = getShiftInt(data, 0, 4)
        val Rn = getShiftInt(data, 8, 4)
        val Rm = getShiftInt(data, 12, 4)
        val M = getShiftInt(data, 6, 1)
        val N = getShiftInt(data, 5, 1)

        sb.append(getXY(M, N))
        sb.append(CondFactory.parse(getCond(data)))
        sb.append(" ")

        sb.append(parseRegister(RdLo))
        sb.append(" , ")
        sb.append(parseRegister(RdHi))
        sb.append(" , ")
        sb.append(parseRegister(Rn))
        sb.append(" , ")
        sb.append(parseRegister(Rm))

        return sb.toString()

    }

    private fun getXY(M: Int, N: Int): String {

        var XY: String

        if (N == 1)
            XY = "T"
        else
            XY = "B"

        if (M == 1)
            XY += "T"
        else
            XY += "B"

        return XY
    }


    override fun performExecuteCommand(data: Int) {}

    companion object {

        val INSTANCE = SMLALBB_A8_626()
    }

}